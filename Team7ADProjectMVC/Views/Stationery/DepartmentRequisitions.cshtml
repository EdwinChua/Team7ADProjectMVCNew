@model PagedList.IPagedList<Team7ADProjectMVC.Requisition>

@{
    Layout = "~/_Layout1.cshtml";
    Page.Title = "Department Requisitions";
    Employee currentEmployee = (Employee)Session["User"];
    Page.Employee = currentEmployee;
}

@using PagedList.Mvc;

<div class="container-fluid" id="searchBar">
    <nav class="navbar navbar-default">
        <form class="navbar-form row" role="form" action="/Store/Inventory" method="get">
            <div class="form-group col-md-4">



            </div>

            <button class="btn btn-success" type="submit">
                Search
            </button>
            <button class="btn btn-primary" type="button" onclick="window.location.href='/Stationery/EmployeeRequisition'">
                Create
            </button>
            <button class="btn btn-default" type="button" onclick="window.location.href='/Store/Inventory'">
                Show All
            </button>

        </form>
    </nav>
</div>

<div>
    <table class="table">
        <thead>
            <tr>
                <th>
                    Requested By
                </th>
                <th>
                    OrderedDate
                </th>
                <th>
                    Status
                </th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in Model)
            {
                <tr class="clickable-row" data-href="Requisition/@item.RequisitionId">
                    <td>@item.Employee.EmployeeName</td>
                    <td>@item.OrderedDate</td>
                    <td>@item.RequisitionStatus</td>
                </tr>
            }
        </tbody>
    </table>
</div>
</div>
<center>
    Page @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber) of @Model.PageCount

    @Html.PagedListPager(Model, page => Url.Action("Inventory",
    new { page, sortOrder = ViewBag.CurrentSort, currentFilter = ViewBag.CurrentFilter }))
</center>

